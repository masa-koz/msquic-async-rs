name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

permissions: read-all

env:
  RUST_BACKTRACE: 1
  toolchain_style: stable
  toolchain_msrv: 1.83.0
  toolchain_h3_msquic_msrv: 1.83.0
  toolchain_doc: nightly-2024-12-11
  toolchain_lint: stable
  toolchain_fuzz: nightly-2024-12-11

jobs:
  ci-pass:
    name: CI is green
    runs-on: ubuntu-latest
    needs:
      - style
      - lint
      - msrv
      - msrv_h3_msquic
      - test
      - doc
    steps:
      - run: exit 0

  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust ${{ env.toolchain_style }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.toolchain_style }}
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: cargo fmt --all -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -p msquic-async -p h3-msquic -- --check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust ${{ env.toolchain_lint }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.toolchain_lint }}
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  msrv:
    name: Check MSRV
    needs: [style]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust ${{ env.toolchain_msrv }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.toolchain_msrv }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: cargo check -p msquic-async
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p msquic-async

  msrv_h3_msquic:
    name: Check MSRV of `h3-msquic`
    needs: [style]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust ${{ env.toolchain_h3_msquic_msrv }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.toolchain_h3_msquic_msrv }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: cargo check -p h3-msquic
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p h3-msquic

  test:
    name: Test ${{ matrix.os }}
    needs: [style]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p msquic-async

  doc:
    name: Build docs
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust ${{ env.toolchain_doc }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.toolchain_doc }}
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: cargo rustdoc -p msquic-async -- -D rustdoc::broken_intra_doc_links
        uses: actions-rs/cargo@v1
        with:
          command: rustdoc
          args: -p msquic-async -- -D rustdoc::broken_intra_doc_links
